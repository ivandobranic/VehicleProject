// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using Project.DAL.Models;
using System;

namespace Project.DAL.Migrations
{
    [DbContext(typeof(VehicleContext))]
    partial class VehicleContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Project.DAL.Models.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<float>("Price");

                    b.Property<int>("Quantity");

                    b.Property<string>("UserName");

                    b.Property<string>("VehicleMake");

                    b.Property<string>("VehicleModel");

                    b.Property<int>("VehiclesForSaleId");

                    b.HasKey("Id");

                    b.HasIndex("VehiclesForSaleId");

                    b.ToTable("Cart");
                });

            modelBuilder.Entity("Project.DAL.Models.CustomerBankAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccountBalance");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("CustomerBankAccount");
                });

            modelBuilder.Entity("Project.DAL.Models.ItemsInStockModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ItemsInStock");

                    b.Property<int>("VehiclesForSaleId");

                    b.HasKey("Id");

                    b.HasIndex("VehiclesForSaleId")
                        .IsUnique();

                    b.ToTable("ItemsInStockModel");
                });

            modelBuilder.Entity("Project.DAL.Models.UserDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<byte[]>("PasswordHash");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("UserDetails");
                });

            modelBuilder.Entity("Project.DAL.Models.VehicleMake", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Abrv")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("CreatedBy");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("VehicleMake");
                });

            modelBuilder.Entity("Project.DAL.Models.VehicleModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Abrv")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<int>("MakeId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("MakeId")
                        .HasName("IX_MakeId");

                    b.ToTable("VehicleModel");
                });

            modelBuilder.Entity("Project.DAL.Models.VehiclesForSale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Price");

                    b.Property<string>("VehicleMake");

                    b.Property<string>("VehicleModel");

                    b.Property<byte[]>("VehiclePicture");

                    b.HasKey("Id");

                    b.ToTable("VehiclesForSale");
                });

            modelBuilder.Entity("Project.DAL.Models.Cart", b =>
                {
                    b.HasOne("Project.DAL.Models.VehiclesForSale", "VehiclesForSale")
                        .WithMany("Cart")
                        .HasForeignKey("VehiclesForSaleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Project.DAL.Models.ItemsInStockModel", b =>
                {
                    b.HasOne("Project.DAL.Models.VehiclesForSale", "VehiclesForSale")
                        .WithOne("ItemsInStockModel")
                        .HasForeignKey("Project.DAL.Models.ItemsInStockModel", "VehiclesForSaleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Project.DAL.Models.VehicleModel", b =>
                {
                    b.HasOne("Project.DAL.Models.VehicleMake", "Make")
                        .WithMany("VehicleModel")
                        .HasForeignKey("MakeId")
                        .HasConstraintName("FK_dbo.VehicleModel_dbo.VehicleMake_MakeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
